{"version":3,"sources":["App.js","index.js"],"names":["App","useState","searchValue","setSearchValue","weather","setWeather","toggle","setToggle","error","setError","className","id","Math","floor","main","temp","description","src","icon","name","value","onChange","e","target","onClick","fetch","then","response","json","data","console","log","cod","sys","country","temp_min","humidity","ReactDOM","render","document","getElementById"],"mappings":"uLAgGeA,MA7Ff,WACE,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BJ,oBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KA8BA,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACE,yBAASC,GAAG,UAAZ,SACGL,EACC,sBAAKI,UAAU,WAAf,UACE,+BACGE,KAAKC,MAAMT,EAAQU,KAAKC,MACzB,wCAFF,OAIA,6BAAKX,EAAQA,QAAQ,GAAGU,OACxB,6BAAKV,EAAQA,QAAQ,GAAGY,cACxB,qBACEC,IAAG,2CAAsCb,EAAQA,QAAQ,GAAGc,KAAzD,aAGL,OAEN,sBAAKP,GAAG,SAAR,UACE,uBACEQ,KAAK,YACLR,GAAG,YACHS,MAAOlB,EACPmB,SAnDU,SAACC,GACnBnB,EAAemB,EAAEC,OAAOH,OACxBX,EAAS,IACTF,GAAU,MAkDJ,uBACA,yBAAQI,GAAG,aAAaa,QA/CZ,WAElBC,MAAM,qDAAD,OADYvB,EACZ,yDAGFwB,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACK,QAAbA,EAAKG,KAA8B,QAAbH,EAAKG,IAC7BvB,EAAS,uBAETJ,EAAWwB,GAEXtB,GAAU,GACVJ,EAAe,SA+Bf,2BAEE,gDACA,mBAAGO,UAAU,wBAGjB,0BAASC,GAAG,SAAZ,UACGL,EACK,+BACDF,EAAQe,KADP,IACcf,EAAQ6B,IAAIC,WAG9B,6BAAK1B,IAENF,EACC,sBAAKI,UAAU,UAAf,UACE,sCAAQ,wCACLN,EAAQU,KAAKqB,SACd,wCAFF,OAIA,sCAAQ,wCACL/B,EAAQU,KAAKqB,SACd,wCAFF,UAKA,KACH7B,EAAS,4CAAc,wCAAoBF,EAAQU,KAAKsB,YAAe,cCpFlFC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,U","file":"static/js/main.5c648b9a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [toggle, setToggle] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleInput = (e) => {\n    setSearchValue(e.target.value);\n    setError(\"\");\n    setToggle(false);\n    //console.log(e.target.value);\n  };\n\n  const handleFetch = () => {\n    const location = searchValue;\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=6e26b1ef92a1ad9aa5322fa1d65f358d`\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        console.log(data);\n        if (data.cod === \"404\" || data.cod === \"400\") {\n          setError(\"Location Not Found\");\n        } else {\n          setWeather(data);\n          //console.log(weather);\n          setToggle(true);\n          setSearchValue(\"\");\n        }\n      });\n  };\n\n  return (\n    <div className='App'>\n      <div className=\"weather\">\n        <section id=\"current\">\n          {toggle ? (\n            <div className='forecast'>\n              <h3>\n                {Math.floor(weather.main.temp)}\n                <span>&deg;</span>C\n              </h3>\n              <h3>{weather.weather[0].main}</h3>\n              <h5>{weather.weather[0].description}</h5>\n              <img \n                src={`https://openweathermap.org/img/w/${weather.weather[0].icon}.png`}\n              />\n            </div>\n          ) : null}\n        </section>\n        <div id=\"search\">\n          <input\n            name=\"searchBar\"\n            id=\"searchBar\"\n            value={searchValue}\n            onChange={handleInput}\n          />\n          <br />\n          <button id=\"search-btn\" onClick={handleFetch}>\n            Search Weather\n            <span>&nbsp;&nbsp;&nbsp;</span>\n            <i className=\"fas fa-search\"></i>\n          </button>\n        </div>\n        <section id=\"weekly\">\n          {toggle ? (\n                <h2>\n              {weather.name},{weather.sys.country}\n            </h2>\n          ) : (\n            <h2>{error}</h2>\n          )}\n          {toggle ? (\n            <div className='highlow'>\n              <h4>Min:<span>&nbsp;</span> \n                {weather.main.temp_min}\n                <span>&deg;</span>C\n              </h4>\n              <h4>Max:<span>&nbsp;</span>\n                {weather.main.temp_min}\n                <span>&deg;</span>C\n              </h4>\n            </div>\n          ) : null}\n          {toggle ? <h4>Humidity: <span>&nbsp;</span>{weather.main.humidity}</h4>:null}\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}